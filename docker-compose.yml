version: '3.3'
services:
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - .:/var/www
      - .docker/nginx/conf.d/:/etc/nginx/conf.d
    depends_on:
      - php
      - mysql
      - supervisor
    networks:
      - api_network
  php:
    build:
      context: .
      dockerfile: .docker/php.Dockerfile
      args: 
        GUID: 1000
        USER: www
    volumes:
      - .:/var/www
      - .docker/php-fpm/php.ini:/etc/php/7.3/fpm/php.ini
      - .docker/php-fpm/www.conf:/etc/php/7.3/fpm/pool.d/www.conf
      - .docker/php-fpm/php-fpm.conf:/etc/php/7.3/fpm/php-fpm.conf
    tty: true
    expose:
      - "9000"
    networks:
      - api_network
  supervisor:
    build:
      context: .
      dockerfile: .docker/supervisor.Dockerfile
    volumes:
        - .:/var/www
        - .docker/supervisor/supervisord.d:/etc/supervisord.d
    networks:
      - api_network
  mysql:
    image: mysql:5.7.34
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "33061:3306"
    environment:
      MYSQL_DATABASE: countries_api_database
      MYSQL_USER: countries_api
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      # - .docker/mysql/data:/var/lib/mysql # Uncomment to persist data on disk
      - .docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - api_network
  composer:
    build:
      context: .
      dockerfile: .docker/composer.Dockerfile
      args: 
        GUID: 1000
        USER: www
    container_name: composer
    volumes:
      - .:/var/www
    working_dir: /var/www
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - api_network
  artisan:
    build:
      context: .
      dockerfile: .docker/php.Dockerfile
      args: 
        GUID: 1000
        USER: www
    container_name: artisan
    volumes:
      - .:/var/www
    depends_on:
      - mysql
    working_dir: /var/www
    entrypoint: ['php', '/var/www/artisan']
    networks:
      - api_network
  npm:
    image: node:alpine
    volumes:
        - .:/app
    working_dir: /app
    entrypoint: ["npm"]
  test:
    build:
      context: .
      dockerfile: .docker/php.Dockerfile
      args: 
        GUID: 1000
        USER: www
    container_name: artisan
    volumes:
      - .:/var/www
    depends_on:
      - mysql
    working_dir: /var/www
    entrypoint: ['/var/www/vendor/bin/phpunit']
    networks:
      - api_network
# Docker Networks
networks:
  api_network:
    driver: bridge
# Volumes
volumes:
  data:
    driver: local
