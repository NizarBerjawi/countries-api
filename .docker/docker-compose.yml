version: '3.3'
services:
  # Nginx Service
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ../:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d
    depends_on:
      - php
      - mariadb
      - supervisor
    networks:
      - laravel
  # PHP FPM Service
  php:
    build:
      context: ..
      dockerfile: .docker/php.Dockerfile
    volumes:
      - ../:/var/www
      - ./php-fpm/php.ini:/etc/php/7.3/fpm/php.ini
      - ./php-fpm/www.conf:/etc/php/7.3/fpm/pool.d/www.conf
      - ./php-fpm/php-fpm.conf:/etc/php/7.3/fpm/php-fpm.conf
    tty: true
    expose:
      - "9000"
    networks:
      - laravel
  # supervisor
  supervisor:
    build:
      context: ..
      dockerfile: .docker/supervisor.Dockerfile
    volumes:
        - ../:/var/www
        - ./supervisor/supervisord.d:/etc/supervisord.d
    networks:
      - laravel
  # MySQL Service
  mariadb:
    image: mariadb:10.5.9
    container_name: mariadb
    restart: unless-stopped
    tty: true
    ports:
      - "33061:3306"
    environment:
      MYSQL_DATABASE: countries_api_database
      MYSQL_USER: countries_api
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      # - ./mysql/data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - laravel
  composer:
    build:
      context: ..
      dockerfile: .docker/composer.Dockerfile
    container_name: composer
    volumes:
      - ../:/var/www
    working_dir: /var/www
    depends_on:
      - php
    user: www
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel
  artisan:
    build:
      context: ..
      dockerfile: .docker/php.Dockerfile
    container_name: artisan
    volumes:
      - ../:/var/www
    depends_on:
      - mariadb
    working_dir: /var/www
    entrypoint: ['php', '/var/www/artisan']
    networks:
      - laravel
# Docker Networks
networks:
  laravel:
    driver: bridge
# Volumes
volumes:
  data:
    driver: local
